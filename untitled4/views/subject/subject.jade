//
   Created by kmj on 2016-11-04.

extends subject_des
block scripts
    script(src = '/javascripts/cytoscape.js')
block cytoscape
    script.
        $(document).ready(function () {
            // 개선 필요한부분 subjectList와 postList match 필요
            var subjectList = '!{subjectList}'.split(',');
            var listendList = '!{usList}'.split(',');
            var postLists = !{postLists};

            var links = [];

            for (var i = 0; i < postLists.length; i++) {
                if (postLists[i].length > 2) {
                    for (var j = 1; j < postLists[i].length; j++) {

                        var item = {};

                        // 듣지 않은 과목인 경우, notYet
                        if (listendList.indexOf(postLists[i][0]) == -1) {
                            item.source = postLists[i][0];
                            item.description = 'notYet';
                        }
                        // 들었던 과목인 경우, listened
                        else {
                            item.source = postLists[i][0];
                            item.description = 'listened';
                        }
                        item.target = postLists[i][j];
                        links.push(item);
                    }
                }
            }

            var nodes = [];
            //var nodes = {};
            var width = $('#left').innerWidth(),
                height = $('#left').innerHeight();
            console.log(links)
            // Compute the distinct nodes from the links.
            links.forEach(function (link) {
                link.source = nodes[link.source] || (nodes[link.source] = {name: link.source});
                link.target = nodes[link.target] || (nodes[link.target] = {name: link.target});
            });
            console.log(nodes)

            var force = d3.layout.force()
                .nodes(d3.values(nodes))
                .links(links)
                .size([width, height / 2])
                .linkDistance(150)
                .charge(-300)
                .on("tick", tick)
                .start();

            var svg = d3.select("#left").append("svg")
                .attr("width", width)
                .attr("height", height);

            var link = svg.selectAll(".link")
                .data(force.links())
                .enter().append("line")
                .attr("class", "link");

            var node = svg.selectAll(".node")
                .data(force.nodes())
                .enter().append("g")
                .attr("class", "node")
                .on("mouseover", mouseover)
                .on("mouseout", mouseout)
                .call(force.drag)
                .on('click', function () {
                    console.log(d3.select(this).text());
                    location.href = '/subject/preSubject/' + d3.select(this).text();
                });

            node.append("circle")
                .attr("r", 8)
                .attr("fill", colorCheck);

            function colorCheck(d) {
                if (listendList.indexOf(d.name) == -1) return "red";
                else return "blue";
            };

            node.append("text")
                .attr("x", 15)
                .attr("dy", "1em")
                .attr("fill", "whitesmoke")
                .text(function (d) {
                    return d.name;
                });

            function tick() {
                link
                    .attr("x1", function (d) {
                        return d.source.x;
                    })
                    .attr("y1", function (d) {
                        return d.source.y;
                    })
                    .attr("x2", function (d) {
                        return d.target.x;
                    })
                    .attr("y2", function (d) {
                        return d.target.y;
                    });

                node
                    .attr("transform", function (d) {
                        return "translate(" + d.x + "," + d.y + ")";
                    });
            }

            function mouseover() {
                d3.select(this).select("circle").transition()
                    .duration(750)
                    .attr("r", 16);
            }

            function mouseout() {
                d3.select(this).select("circle").transition()
                    .duration(750)
                    .attr("r", 8);
            }

        });

        // 기존 cytoscrape 이용

        //window.onload = function () {
        //    var cy = cytoscape({
        //        container: $('#left'),
        //        elements: [],
        //        style: [
        //            {
        //                selector: 'node',
        //                style: {
        //                    shape: 'circle',
        //                    'text-valign': 'center',
        //                    'text-outline-width': 2,
        //                    'text-outline-color': 'data(faveColor)',
        //                    color: 'white',
        //                    'background-color': 'data(faveColor)',
        //                    label: 'data(name)',
        //                    width: '100',
        //                    height: '100',
        //                    'background-fit': 'cover'
        //                }
        //            }]
        //    });
        //
        //    // list에 과목들 나옴
        //    var list = '
        //
        //
        //
        //
        ////    var usl = '
        //
        //
        //
        //
        //    for(var i in list){
        //        if(usl.indexOf(list[i])<0){
        //            cy.add({
        //                data: {id: list[i], name: list[i].replace(/\_/g, " "), faveColor: '#3366FF'}
        //            });
        //        }else{
        //            cy.add({
        //                data: {id: list[i], name: list[i].replace(/\_/g, " "), faveColor: '#FF3333'}
        //            });
        //        }
        //    }
        //    cy.layout({
        //        name: 'grid'
        //    });
        //
        //    cy.on('tap', 'node', function () {
        //        try {
        //            var select = this.data('id');
        //            location.href = '/subject/preSubject/' + select;
        //        } catch (e) {
        //            //error catch
        //        }
        //    });
        //    cy.on('mouseover', 'node', function () {
        //        try {
        //            var content = this.data('name');
        //            $('.document').html('<div id="result">' + content + '</div>');
        //        } catch (e) {
        //            console.log(e);
        //        }
        //    });
        //};

